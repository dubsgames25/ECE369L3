.data
asize0:  .word    4,  4,  2, 2   # i, j, k, l
frame0:  .word    0,  0,  1,  2
         .word    0,  0,  3,  4
         .word    0,  0,  0,  0
         .word    0,  0,  0,  0
window0: .word    1,  2
         .word    3,  4
         
newline: .asciiz     "\n" 
bracket_1: .asciiz     "[" 
bracket_2: .asciiz     "]" 
comma: .asciiz     "," 
window: .asciiz "This is the window value"



.text

.globl main




main:

la $a0,asize0
la $a1,frame0
la $a2,window0

lw $s0,0($a0)#i
lw $s1,4($a0)#j
lw $s2,8($a0)#k
lw $s3,12($a0)#l



move $t0,$zero
add $t1,$t1,$s2
sub $t1,$t1,1
li $t2,0
li $t3,0
li $t4,0
li $t5,0
li $t6,0
li $t7,0
li $t8,0
li $t9,0
#jal iterate_Window
j iterate_window




next_one:


move $t0,$zero
sub $t1,$s0,$s2
addi $t1,$t1,1

li $t2,0
li $t3,0
li $t4,0
li $t5,0
li $t6,0
li $t7,0
li $t8,0
li $t9,0

j iterate_rightF
next_one2:


ending_program:

j program_end





iterate_window:

beq   $t0,$t1,leave_window
la $t2,window0#regiter
sll $t3,$t0,2# multiply t3 by 4
add $t2,$t2,$t3#register plus offset of #t3
li $t4,0 #intialize #t4
add $t4,$t4,$t2   #store rgister offset value to t4
#if we are at the first index of the frame0 we move right to get the values of the window and the values of the frame0
li $t6,0
loop_F:
beq  $t6,$s2,exit_i
lw $s4,0($t4)
add $v0,$v0,$s4
li $t7,1
loopj:
beq $t7,$s3,jend
#increments j by whatever framesize and getting 4 bites then adding it to t4 to offset
sll $t8,$s2,2
add $t4,$t4,$t8
lw $s4,0($t4)
add $v0,$v0,$s4
addi $t7,$t7,1
j loopj
jend:
sub $t8,$t8,4
sub $t4,$t4,$t8
li $t8,0
addi $t6,$t6,1
j loop_F
exit_i:
jal print_voW
addi $t0,$t0,1   
j iterate_window
leave_window:












j next_one




iterate_rightF:
beq   $t0,$t1,leave_right
la $t2,frame0#regiter
sll $t3,$t0,2# multiply t3 by 4
add $t2,$t2,$t3#register plus offset of #t3
li $t4,0 #intialize #t4
add $t4,$t4,$t2   #store rgister offset value to t4
#if we are at the first index of the frame0 we move right to get the values of the window and the values of the frame0
li $t6,0
loop_F1:
beq  $t6,$s2,exit_i1
lw $s4,0($t4)
add $v0,$v0,$s4
li $t7,1
loopj1:
beq $t7,$s3,jend1
#increments j by whatever framesize and getting 4 bites then adding it to t4 to offset
sll $t8,$s0,2
add $t4,$t4,$t8
lw $s4,0($t4)
add $v0,$v0,$s4
addi $t7,$t7,1
j loopj1
jend1:
sub $t8,$t8,4
sub $t4,$t4,$t8
li $t8,0
addi $t6,$t6,1
j loop_F1
exit_i1:
jal print_vo1
addi $t0,$t0,1   
j iterate_rightF
leave_right:
j next_one2



#next iteration

print_vo1:
move $s4,$v0
la $s6,bracket_1
move $a0,$s6
li $v0,4
syscall
move $v0,$s4
move $a0,$v0
li $v0,1
syscall
la $a0,asize0
li $v0,0
la $s6,bracket_2
move $a0,$s6
li $v0,4
syscall
la $a0,asize0
li $v0,0
jr $ra


print_voW:


move $s4,$v0

la $s6,window
move $a0,$s6
li $v0,4
syscall



la $s6,bracket_1
move $a0,$s6
li $v0,4
syscall
move $v0,$s4
move $a0,$v0
li $v0,1
syscall
la $a0,asize0
li $v0,0
la $s6,bracket_2
move $a0,$s6
li $v0,4
syscall

la $s6,newline
move $a0,$s6
li $v0,4
syscall
la $a0,asize0
li $v0,0
jr $ra




jr $ra


program_end:
li $v0,10
syscall
  
 
    
    
    
    
