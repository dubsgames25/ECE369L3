    .data
asize0:   .word 0         # Define asize0 as a 32-bit integer
frame0:   .word 0         # Define frame0 as a 32-bit integer (pointer to an int)
window0:  .word 0         # Define window0 as a 32-bit integer (pointer to an int)

    .text
    .globl main
main:
    # Function prologue
    addi $sp, $sp, -8      # Adjust stack pointer to make space for saving registers
    sw   $ra, 4($sp)       # Save return address
    sw   $fp, 0($sp)       # Save frame pointer
    move $fp, $sp          # Set frame pointer

    # Load function arguments into $a0, $a1, $a2
    lw   $a0, asize0       # Load asize0 into $a0
    lw   $a1, frame0       # Load frame0 (address) into $a1
    lw   $a2, window0      # Load window0 (address) into $a2

    # Call the function SearchPattern
    jal  SearchPattern     # Jump and link to SearchPattern function

    # Set return value to 0
    li   $v0, 0            # Load immediate 0 into $v0 (return value)

    # Function epilogue
    move $sp, $fp          # Restore stack pointer from frame pointer
    lw   $ra, 4($sp)       # Restore return address
    lw   $fp, 0($sp)       # Restore frame pointer
    addi $sp, $sp, 8       # Adjust stack pointer back
    jr   $ra               # Return to caller
